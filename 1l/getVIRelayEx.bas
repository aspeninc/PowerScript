' ASPEN PowerScript sample program
'
' GETVIRelayEx.BAS
'
' Show all fault description on a relay group and export solution of selected fault to excel file 
'
'
Sub main()
 Dim MagArray(12) As Double
 Dim AngArray(12) As Double
 Dim DummyArray(6) As Long 
 Dim ShowFaultFlag As Long
 Dim BranchHnd As Long
 Dim FaultString As String
 Dim FaultList() As String
 Dim FaultIndex() As Integer
 Dim FltRmvIndex() As Integer
 
 ' Get picked object number
 If GetEquipment( TC_PICKED, ObjHnd ) = 0 Or EquipmentType( ObjHnd ) <> TC_RLYGROUP Then 
   Print "Please select a relay group"
   Exit Sub
 End If
 
 ' Get branch and bus handles
 If GetData( ObjHnd, RG_nBranchHnd, BranchHnd ) = 0 Then GoTo HasError
 If GetData( BranchHnd, BR_nBus1Hnd, Bus1Hnd )  = 0 Then GoTo HasError
 
 ExcelFilePath$ = GetOLRFilePath()
 
 FtCounts = 0
 ShowFaultFlag = 1 ' Starting from the first one 
 While PickFault( ShowFaultFlag ) > 0 
    FtCounts =  FtCounts + 1
 ShowFaultFlag = SF_NEXT   ' Show next fault
 Wend
 
 ReDim FaultList(FtCounts*6)
 ReDim FaultIndex(FtCounts*6)
 ReDim FltRmvIndex(FtCounts*6)

 For ii = 0 to 6*FtCounts - 1
   FaultList(ii)  = ""
   FaultIndex(ii) = -1 
 Next ii
 
 FtRows  = 0
 FtIndex  = 1
 ShowFaultFlag = 1 ' Starting from the first one 
 While PickFault( ShowFaultFlag ) > 0
   FaultString = FaultDescription()   ' Get fault description 
   ' Display fault descripting in multiple rows
   nPos = InStr( 1,FaultString,Chr(10) )  
   nLoop = 0 
   While nPos > 0
    ALine$ = Left$( FaultString$, nPos )
    FaultList(FtRows) = ALine$
    FaultIndex(FtRows) = FtIndex
    FtRows = FtRows + 1
    nLoop = nLoop + 1
    If nLoop = 5 Then
      FaultString = "       ..."
      nPos = 0
    Else
      BLine$ = Right$( FaultString$, Len(FaultString$) - nPos )
      FaultString$ = "  " + BLine$
      nPos = InStr( 1,FaultString,Chr(10) )
    End If
   Wend
   FaultList(FtRows) = FaultString
   FaultIndex(FtRows) = FtIndex
   FtIndex = FtIndex + 1
   FtRows = FtRows + 1
   ShowFaultFlag = SF_NEXT   ' Show next fault
 Wend
 
' ===================== Dialog box spec (generated by Dialog Editor) ==========
'
'
Begin Dialog DIALOG_1 21,29,332,185, "Save Fault Simulation Results"
  Text 134,8,42,8,"List of Faults"
  Text 8,133,58,8,"Output File Name:"
  Text 307,150,14,8,".csv"
  ListBox 8,21,314,107, FaultList(), .ListBox
  PushButton 121,166,40,13,"Save", .SaveButton
  CancelButton 171,166,40,13
  TextBox 8,148,298,12,.Edit1
  PushButton 244,131,78,13,"Remove item from list", .Button2
End Dialog
'
' ===================== End of Dialog box spec ================================

 Dim Dlg As Dialog_1
 RmvNum = 0

 DlgBegin:
 ' show the dialog
 Dlg.Edit1 = ExcelFilePath$
 Button = Dialog( dlg )
 If Button = 0 Then Exit Sub	' Canceled
 If Button = 1 Then         	' Save to file
 ' Read excel file and create change file
   ExcelFile$ = Trim(Dlg.Edit1)
   If Len(ExcelFile) = 0 Or ExcelFile$ = ExcelFilePath$ Then 
     Print "Please enter file name."
     GoTo DlgBegin
   Else
	ExcelFile$ = ExcelFile$ + ".csv"
	Open ExcelFile For Output As 1
	StrLine$ = ",Ia(mag),Ia(ang),Ib(mag),Ib(ang),Ic(mag),Ic(ang)"
	StrLine$ = StrLine$ + ",I+(mag),I+(ang),I-(mag),I-(ang),3I0(mag),3I0(ang)"
	StrLine$ = StrLine$ + ",Va(mag),Va(ang),Vb(mag),Vb(ang),Vc(mag),Vc(ang)"
	StrLine$ = StrLine$ + ",V+(mag),V+(ang),V-(mag),V-(ang),V0(mag),V0(ang)"
	StrLine$ = StrLine$ + ",Fault Description"
	Print #1, StrLine$
	
	FtCounts = 0
	FtFirst = 0
    ShowFaultFlag = 1 ' Starting from the first one
    
    While PickFault( ShowFaultFlag ) > 0 
    nCheck = 0
     For ii = 0 to FtRows-1
       If FtCounts + 1 = FaultIndex(ii) Then
         nCheck = 1
       End If
     Next ii
     If nCheck = 1 Then  
       If GetSCCurrent( BranchHnd, MagArray, AngArray, 4 ) = 0 Then GoTo HasError
       StrLine$ = Format( MagArray(1), "#0.0") + "," + Format( AngArray(1), "#0.0") + ","
       StrLine$ = StrLine$ + Format( MagArray(2), "#0.0") + "," + Format( AngArray(2), "#0.0") + ","
       StrLine$ = StrLine$ + Format( MagArray(3), "#0.0") + "," + Format( AngArray(3), "#0.0") + ","      
     
       If FtFirst = 0 Then
        IaMax = MagArray(1)
        Iamin = MagArray(1)
        IbMax = MagArray(2)
        Ibmin = MagArray(2)
        IcMax = MagArray(3)
        Icmin = MagArray(3)
       Else 
        If MagArray(1) > IaMax Then IaMax = MagArray(1)
        If MagArray(1) < IaMin Then IaMin = MagArray(1)
        If MagArray(2) > IbMax Then IbMax = MagArray(2)
        If MagArray(2) < IbMin Then IbMin = MagArray(2)
        If MagArray(3) > IcMax Then IcMax = MagArray(3)
        If MagArray(3) < IcMin Then IcMin = MagArray(3)
       End If 
       
       If GetSCCurrent( BranchHnd, MagArray, AngArray, 2 ) = 0 Then GoTo HasError
       StrLine$ = StrLine$ + Format( MagArray(2), "#0.0") + "," + Format( AngArray(2), "#0.0") + ","
       StrLine$ = StrLine$ + Format( MagArray(3), "#0.0") + "," + Format( AngArray(3), "#0.0") + ","
       MagArray(1) = MagArray(1)*3
       StrLine$ = StrLine$ + Format( MagArray(1), "#0.0") + "," + Format( AngArray(1), "#0.0") + ","  
       
       If FtFirst = 0 Then
        I1Max = MagArray(2)
        I1min = MagArray(2)
        I2Max = MagArray(3)
        I2min = MagArray(3)
        I0Max = MagArray(1)
        I0min = MagArray(1)
       Else 
        If MagArray(2) > I1Max Then I1Max = MagArray(2)
        If MagArray(2) < I1Min Then I1Min = MagArray(2)
        If MagArray(3) > I2Max Then I2Max = MagArray(3)
        If MagArray(3) < I2Min Then I2Min = MagArray(3)
        If MagArray(1) > I0Max Then I0Max = MagArray(1)
        If MagArray(1) < I0Min Then I0Min = MagArray(1)
       End If  
     
       If GetSCVoltage( Bus1Hnd, MagArray, AngArray, 4 ) = 0 Then GoTo HasError
       StrLine$ = StrLine$ + Format( MagArray(1), "#0.0") + "," + Format( AngArray(1), "#0.0") + ","
       StrLine$ = StrLine$ + Format( MagArray(2), "#0.0") + "," + Format( AngArray(2), "#0.0") + ","
       StrLine$ = StrLine$ + Format( MagArray(3), "#0.0") + "," + Format( AngArray(3), "#0.0") + "," 
     
       If FtFirst = 0 Then
        VaMax = MagArray(1)
        Vamin = MagArray(1)
        VbMax = MagArray(2)
        Vbmin = MagArray(2)
        VcMax = MagArray(3)
        Vcmin = MagArray(3)
       Else 
        If MagArray(1) > VaMax Then VaMax = MagArray(1)
        If MagArray(1) < VaMin Then VaMin = MagArray(1)
        If MagArray(2) > VbMax Then VbMax = MagArray(2)
        If MagArray(2) < VbMin Then VbMin = MagArray(2)
        If MagArray(3) > VcMax Then VcMax = MagArray(3)
        If MagArray(3) < VcMin Then VcMin = MagArray(3)
       End If 
       
       If GetSCVoltage( Bus1Hnd, MagArray, AngArray, 2 ) = 0 Then GoTo HasError
       StrLine$ = StrLine$ + Format( MagArray(2), "#0.0") + "," + Format( AngArray(2), "#0.0") + ","
       StrLine$ = StrLine$ + Format( MagArray(3), "#0.0") + "," + Format( AngArray(3), "#0.0") + ","
       StrLine$ = StrLine$ + Format( MagArray(1), "#0.0") + "," + Format( AngArray(1), "#0.0") + "," 
     
       If FtFirst = 0 Then
        V1Max = MagArray(2)
        V1min = MagArray(2)
        V2Max = MagArray(3)
        V2min = MagArray(3)
        V0Max = MagArray(1)
        V0min = MagArray(1)
        FtFirst = 1
       Else 
        If MagArray(2) > V1Max Then V1Max = MagArray(2)
        If MagArray(2) < V1Min Then V1Min = MagArray(2)
        If MagArray(3) > V2Max Then V2Max = MagArray(3)
        If MagArray(3) < V2Min Then V2Min = MagArray(3)
        If MagArray(1) > V0Max Then V0Max = MagArray(1)
        If MagArray(1) < V0Min Then V0Min = MagArray(1)
       End If 
                    
       FaultString$ = FaultDescription()   ' Get fault description  
       nPos = InStr( 1,FaultString,Chr(10) )    
       While nPos > 0
        ALine$ = Left$( FaultString$, nPos - 1 )
        BLine$ = Right$( FaultString$, Len(FaultString$) - nPos )
        FaultString$ = ALine$ + "|" + BLine$
        nPos = InStr( 1,FaultString,Chr(10) )
       Wend
       FtCounts = FtCounts + 1  
       StrLine$ = StrLine$ + FaultString$       
       StrLine$ = FtCounts$ + "," + StrLine$
       Print #1, StrLine$        
       FtCounts = FtCounts - 1  
     End If
     FtCounts = FtCounts + 1
     ShowFaultFlag = SF_NEXT   ' Show next fault
    Wend	
    
    Print #1, ""
    
    StrLine$ = "Max," + Format( IaMax, "#0.0") + ",," + Format( IbMax, "#0.0") + ",," + Format( IcMax, "#0.0")
    StrLine$ = StrLine$ + ",," + Format( I1Max, "#0.0") + ",," + Format( I2Max, "#0.0") + ",," + Format( I0Max, "#0.0")
    StrLine$ = StrLine$ + ",," + Format( VaMax, "#0.0") + ",," + Format( VbMax, "#0.0") + ",," + Format( VcMax, "#0.0")
    StrLine$ = StrLine$ + ",," + Format( V1Max, "#0.0") + ",," + Format( V2Max, "#0.0") + ",," + Format( V0Max, "#0.0")
    Print #1, StrLine$    
    StrLine$ = "Min," + Format( IaMin, "#0.0") + ",," + Format( IbMin, "#0.0") + ",," + Format( IcMin, "#0.0")
    StrLine$ = StrLine$ + ",," + Format( I1Min, "#0.0") + ",," + Format( I2Min, "#0.0") + ",," + Format( I0Min, "#0.0")
    StrLine$ = StrLine$ + ",," + Format( VaMin, "#0.0") + ",," + Format( VbMin, "#0.0") + ",," + Format( VcMin, "#0.0")
    StrLine$ = StrLine$ + ",," + Format( V1Min, "#0.0") + ",," + Format( V2Min, "#0.0") + ",," + Format( V0Min, "#0.0")
    Print #1, StrLine$
    Close 1
    
    Print "Results have been saved to " + ExcelFile$
    
   End If
 End If
 
 ' Remove item from fault list
 If Button = 2 Then
   If ( dlg.ListBox = -1 ) Then
     Print "Please select a fault."
     GoTo DlgBegin
   End If
   FltRmvIndex(RmvNum) = FaultIndex(dlg.ListBox) 
   RmvNum = RmvNum + 1 
   For ii = 0 to FtRows - 1
     FaultList(ii)  = ""
     FaultIndex(ii) = -1 
   Next ii
 FtCounts = 0
 FtIndex  = 1
 ShowFaultFlag = 1 ' Starting from the first one 
 nCheck = 0
 While PickFault( ShowFaultFlag ) > 0
   For ii = 0 to RmvNum-1
     If FtIndex = FltRmvIndex(ii) Then
       nCheck = 1
     End If
   Next ii
   If nCheck <> 1 Then
     FaultString = FaultDescription()   ' Get fault description 
     nPos = InStr( 1,FaultString,Chr(10) )  
     nLoop = 0  
     While nPos > 0
      ALine$ = Left$( FaultString$, nPos )
      FaultList(FtCounts) = ALine$
      FaultIndex(FtCounts) = FtIndex
      FtCounts = FtCounts + 1
      nLoop = nLoop + 1
      If nLoop = 5 Then
        FaultString = "       ..."
        nPos = 0
      Else
        BLine$ = Right$( FaultString$, Len(FaultString$) - nPos )
        FaultString$ = "  "+BLine$
        nPos = InStr( 1,FaultString,Chr(10) )
      End If
     Wend
     FaultList(FtCounts) = FaultString
     FaultIndex(FtCounts) = FtIndex
     FtCounts = FtCounts + 1
   End If
   FtIndex = FtIndex + 1   
   ShowFaultFlag = SF_NEXT   ' Show next fault
   nCheck = 0
 Wend     
   GoTo DlgBegin
 End If
 

 Exit Sub
 
 
HasError:
 Print "Error: "; ErrorString( ) 
End Sub


' ===================== End of Main() =========================================

 'Find the directory of the spreadsheet
Function GetOLRFilePath() As String
  FilePath$ = GetOLRFileName()
  For ii = Len(FilePath) to 1 step -1
    If Mid(FilePath, ii, 1) = "\" Then
      FilePath = Left(FilePath, ii)
      exit For
    End If
  Next
  GetOLRFilePath = FilePath
End Function



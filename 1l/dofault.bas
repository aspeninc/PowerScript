' ASPEN PowerScript sample program
'
' DOFAULT.BAS
'
' Simulate and display fault on a relay group or a bus
' Carry out iterations to simulate MOV protected series capacitor if needed
'
' The series-capacitor model and the script are based on a linearized model 
' proposed by D.L. Goldsworthy, which gives empirical formulas for the 
' overall impedance of the MOV-protected capacitor bank, as a function of 
' the capacitor current.  (D.L. Goldsworthy, "A linearized Model for 
' MOV-Protected Series Capacitors," IEEE Transactions on Power Systems, 
' Vol. PWRS-2, No. 4, November 1987.)
'
' PowerScript functions called:
'   GetEquipment()
'   EquipmentType()
'   DoFault()
'   ShowFault()
'   GetSCCurrent()
'   GetData()
'   SetData()
'   PostData()
'
' Last modified: 8/14/2001

' Main program code
Const MaxSCap = 50
Const MaxIterations = 1000
Const Tolerance = 0.0001

Sub main()
   ' Variable declaration
   Dim FltConnection(4) As Long
   Dim FltOption(14) As Double
   Dim OutageType(3) As Long
   Dim OutageList(15) As Long
   Dim ShowRelayFlag(4) As Long
'   Dim nIterations As Long
   Dim Rflt As Double, Xflt As Double

   ' Check array size limit
   If GetData( HND_SYS, SY_nNOseriescap, SCapsNO& ) = 0 Then SCapsNO& = 0
   If SCapsNO > MaxSCap Then
     Print "Please edit script code to increase MaxSCap to " + Str(SCapsNO)
     Exit Sub
   End If

   ' Initialize 
   For ii = 1 To 4 
     FltConnection(ii) = 0
   Next 
   For ii = 1 To 12
     FltOption(ii) = 0.0
   Next
   OutageList(1) = -1  ' Terminate the list for good measure
   For ii = 1 To 3
     OutageType(ii) = 0
   Next
   For ii = 1 To 4
     ShowRelayFlag(ii) = 0
   Next
   Rflt        = 0.0   ' No fault impedance
   Xflt        = 0.0
   ClearPrev   = 1     ' Don't keep previous result

   If GetEquipment( TC_PICKED, PickedHandle ) = 0 Then
     Print "Must select a relay group or a bus"
     Exit Sub
   End If
   ' Determine what's being picked
   TypeCode = EquipmentType( PickedHandle )
   If TypeCode = TC_RLYGROUP Then
     ' Relay group fault dialog
     If FaultDialog( FltConnection, FltOption, 0, Rflt, Xflt ) = 0 Then Stop
   ElseIf TypeCode = TC_BUS Then
     ' Bus fault dialog
     If FaultDialog( FltConnection, FltOption, 1, Rflt, Xflt ) = 0 Then Stop
   Else
     Print "Must select a relay group or a bus"
     Exit Sub
   End If
   ' Simulate fault at this point in the network
   If 0 = SimuFault( PickedHandle, FltConnection, FltOption, OutageType, OutageList, _
          Rflt, Xflt, ClearPrev ) Then GoTo HasError
   Exit Sub
   ' Error handling
   HasError:
   Print "Error: ", ErrorString( )
End Sub  ' End of Sub Main()
' ===================== End of Main() =========================================


' ===================== Dialog box spec (generated by Dialog Editor) ==========
'
Begin Dialog FAULTDLG 48,46, 258, 128, "Specify fault"
  OptionGroup .FLTCONN
    OptionButton 12,16,24,12, "3PH"
    OptionButton 40,16,24,12, "2LG"
    OptionButton 68,16,24,12, "1LG"
    OptionButton 96,16,24,12, "L-L"
  OptionGroup .FLTOPT
    OptionButton 12,36,44,8, "Close-in"
    OptionButton 12,44,100,8, "Close-in with end opened"
    OptionButton 12,52,68,8, "Remote bus"
    OptionButton 12,60,88,8, "Line end"
    OptionButton 12,68,60,8, "Intermediate"
    OptionButton 12,76,112,8, "Intermediate with end opened"
  Text 8,8,64,8, "Fault Connection"
  Text 8,28,64,8, "Fault Location"
  Text 128,8,64,8, "Fault impedance"
  Text 136,20,12,8, "Z="
  TextBox 148,16,40,12, .EditBox_1
  Text 192,20,12,8, "+ j"
  TextBox 204,16,40,12, .EditBox_2
  TextBox 144,68,16,12, .EditBox_3
  Text 128,72,16,8, "At %"
  TextBox 96,84,24,12, .EditBox_4
  Text 124,88,12,8, "To"
  TextBox 136,84,24,12, .EditBox_5
  Text 24,88,68,8, "Auto sequence from"
  OKButton 72,104,48,12
  CancelButton 136,104,48,12
End Dialog
Begin Dialog BUSFAULTDLG 48,46, 258, 59, "Specify fault"
  OptionGroup .FLTCONN
    OptionButton 12,16,24,12, "3PH"
    OptionButton 40,16,24,12, "2LG"
    OptionButton 68,16,24,12, "1LG"
    OptionButton 96,16,24,12, "L-L"
  Text 8,8,64,8, "Fault Connection"
  Text 128,8,64,8, "Fault impedance"
  Text 136,20,12,8, "Z="
  TextBox 148,16,40,12, .EditBox_1
  Text 192,20,12,8, "+ j"
  TextBox 204,16,40,12, .EditBox_2
  OKButton 72,40,48,12
  CancelButton 136,40,48,12
End Dialog
' ===================== End of Dialog box spec ================================

' ===================== FaultDialog() =========================================
' Purpose:
'   Get Fault spec. inputs from user
'
Function FaultDialog( FltConnection() As Long, FltOption() As Double, _ 
             DlgStyle As Long, ByRef dR As Double, ByRef Xcap As Double ) As Long
  If DlgStyle = 1 Then  ' Picked Bus
    Dim dlg As BUSFAULTDLG
    button = Dialog( dlg )
    If button = 0 Then ' Canceled
      FaultDialog = 0
      Exit Function
    End If
    FltConnection( 1 + dlg.FLTCONN ) = 1
    FltOption(1) = 1.0
    dR = Val(dlg.EditBox_1)
    Xcap = Val(dlg.EditBox_2)
  Else  ' Picked Relay group
    Dim dlg1 As FAULTDLG
    dlg1.EditBox_3 = 10  '10%
    button = Dialog( dlg1 )
    If button = 0 Then ' Canceled
      FaultDialog = 0
      Exit Function
    End If
    FltConnection( 1 + dlg1.FLTCONN ) = 1
    If dlg1.FLTOPT = 4 Or dlg1.FLTOPT = 5  Then 
      FltOption(1 + 2*dlg1.FLTOPT ) = Val(dlg1.EditBox_3)
      FltOption(13) = Val(dlg1.EditBox_4)
      FltOption(14) = Val(dlg1.EditBox_5)
    Else
      FltOption( 1 + 2*dlg1.FLTOPT ) = 1.0
    End If
    dR = Val(dlg1.EditBox_1)
    Xcap = Val(dlg1.EditBox_2)
  End If
  FaultDialog = 1
End Function
' ===================== End of FaultDialog() ==================================

' ===================== SCapdata dialog box spec (generated by Dialog Editor) =
'
Begin Dialog Dialog_SCap 31,48, 200, 64, "Confirmation"
  Text 8,8,188,12, "Series Cap data have been modified during iteration."
  Text 8,24,172,8, "How would you like to restore the data?"
  PushButton 24,44,64,12, "Restore Now", .PushButton_1
  PushButton 104,44,64,12, "Restore Later", .PushButton_2
End Dialog
' ===================== End of SCap dialog box spec ===========================

' ===================== SimuFault() ===========================================
' Purpose:
'   Simulate fault, adjust MOV if needed
'
Function SimuFault( ByVal  nDevHnd As Long, ByRef FltConnection() As Long, _
               ByRef FltOption() As Double, ByRef OutageType() As Long, _
               ByRef OutageList() As Long, _
               ByVal Rflt As Double, ByVal Xflt As Double, _
               ByVal ClearPrev As Long ) As Long

  Dim XoArray(MaxSCap) As Double
  Dim MagArray(16) As Double
  Dim AngArray(16) As Double
  Dim Xcap As Double, Ipr As Double, Rc As Double, Xc As Double, dError As Double
  Dim Ipu As Double
  Dim SCapsCount As Long, SCapHandle As Long, DoneFlag As Long

  For IterationCount = 1 To MaxIterations	' Do at most this much iterations
    ' Simulate the fault
    If 0 = DoFault( nDevHnd, FltConnection, FltOption, OutageType, OutageList, Rflt, _
        Xflt, ClearPrev ) Then GoTo HasError
    ' Must show fault before geting current or voltage
    If ShowFault( 1, 1, 4, 0, ShowRelayFlag ) = 0 Then GoTo HasError

    ' Adjust Series cap impedance
    DoneFlag = 1
    SCapHandle = 0
    SCapsCount = 0
    dMaxError  = 0.0
    Iold      = 1.0
    While IterationCount < MaxIterations And GetEquipment( TC_SCAP, SCapHandle ) > 0
      If GetData( SCapHandle, SC_nInService, StatusFlag ) = 0 Then GoTo HasError
      If StatusFlag = 1 Then  ' Need to adjust only In service Scap
        SCapsCount = SCapsCount + 1
        If GetData( SCapHandle, SC_dX, Xcap ) = 0 Then GoTo HasError
        If GetData( SCapHandle, SC_dX, Rcap ) = 0 Then GoTo HasError
        If IterationCount = 1 Then
          XoArray(SCapsCount) = Xcap	' Remember original X
        End If
        If GetSCCurrent( SCapHandle, MagArray, AngArray, 4 ) > 0 Then 
          If GetData( SCapHandle, SC_dIpr, Ipr ) = 0 Then GoTo HasError
          Ipr = Ipr * 1000	' Convert Protective level current to A
          If ( MagArray(1) > Ipr ) Then 
            ' MOV conducts, recalculate impedance
            ' In first few iterations the current could be very high.
            ' Put a limit on it
            If ( MagArray(1) > 4*Ipr ) Then MagArray(1) = 4*Ipr
            Ipu = MagArray(1) / Ipr
            ' Compute new imdedance
            Rc = XoArray(SCapsCount)*(0.0745 + 0.49*Exp(-0.243*Ipu) - 35.0*Exp(-5.0*Ipu) _
                   - 0.6*Exp(-1.41*Ipu))
            Xc  = XoArray(SCapsCount)*(0.101 - 0.005749*Ipu + 2.088*Exp(-0.8566*Ipu))
          Else
            ' MOV does not conduct keep the impedance unchanged
            Xc  = Xcap
          End If 
        Else
          ' No current available. Assumed no MOV operation
          Xc = Xcap
          Rc = Rcap
        End If
        dError = Abs((Xc - Xcap)/Xcap)
        If dError > dMaxError Then dMaxError = dError
        If  IterationCount = 1 Or dError > Tolerance Then
          DoneFlag = 0
          If SetData( SCapHandle, SC_dX,  Xc + 0.3*(Xcap-Xc) ) = 0 Then GoTo HasError
          If SetData( SCapHandle, SC_dX0, Xc + 0.3*(Xcap-Xc) ) = 0 Then GoTo HasError
          If SetData( SCapHandle, SC_dR,  Rc + 0.3*(Rcap-Rc) ) = 0 Then GoTo HasError
          If SetData( SCapHandle, SC_dR0, Rc + 0.3*(Rcap-Rc) ) = 0 Then GoTo HasError
          If PostData( SCapHandle ) = 0 Then GoTo HasError	'Save new impedance
        End If 
      End If
    Wend
    If DoneFlag > 0 Then Exit For
  Next  'Up to iteration limit
  If SCapsCount > 0 And IterationCount > 1 Then 
    Print "Done:  nIterations = "; IterationCount; "Max error between iterations = "; dMaxError
    ' Restore original series cap impedance
    Dim dlg As Dialog_SCap
    Button = Dialog( dlg )
    If Button = 2 Then
      Print "To restore original value of series capacitor impedance" + Chr(13) + _
            "Re-open this file without saving changes"
    Else
      SCapHandle = 0
      SCapsCount = 0
      While GetEquipment( TC_SCAP, SCapHandle ) > 0
        If GetData( SCapHandle, SC_nInService, StatusFlag ) = 0 Then GoTo HasError
        If StatusFlag = 1 Then
          SCapsCount = SCapsCount + 1
          If SetData( SCapHandle, SC_dX,  XoArray(SCapsCount) ) = 0 Then GoTo HasError
          If SetData( SCapHandle, SC_dX0, XoArray(SCapsCount) ) = 0 Then GoTo HasError
          If SetData( SCapHandle, SC_dR,  0.0 ) = 0 Then GoTo HasError
          If SetData( SCapHandle, SC_dR0, 0.0 ) = 0 Then GoTo HasError
          If PostData( SCapHandle ) = 0 Then GoTo HasError
        End If
      Wend
    End If
  End If
  SimuFault = 1
  Exit Function 
  HasError:
  Print "Error: ", ErrorString()
  SimuFault = 0
  Exit Function 
End Function
' ===================== End of SimuFault() ====================================
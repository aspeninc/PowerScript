' ASPEN PowerScrip sample program
'
' LINEOUT2.BAS
'
' Simulate 3PH and 1LN fault on each end of a line. 
' Also do simulation with outage of every lines connected to these
' buses. Record maximum fault current in a file
'
' Output to a file:
'  - Fault current
'  - Max fault current and fault description
'
' PowerScript functions called:
'   GetEquipment()
'   NextBusByName()
'   GetBusEquipment()
'   FaultDescription()
'   DoFault()
'   ShowFault()
'   GetSCCurrent()
'
Sub main()
   ' Variable declaration
   Dim Imagnitude(16) As Double
   Dim Iangle(16) As Double
   Dim FltConn(4) As Long
   Dim FltOpt(14) As Double
   Dim OutageOpt(4) As Long
   Dim OutageLst(30) As Long

   If OpenOutFile() = 0 Then Stop

   'fault connections
   FltConn(1) = 1   ' Do 3PH
   FltConn(2) = 0
   FltConn(3) = 1   ' Do 1LG
   FltConn(4) = 0
   FltOpt(1)  = 1   ' Bus fault no outage
   FltOpt(2)  = 0   ' Bus fault no outage
   OutageOpt(1) = 1 ' With one outage at a time
   OutageOpt(2) = 0 ' only
   Rflt         = 0 ' Fault R
   Xflt         = 0 ' Fault X
   ClearPrev    = 1 ' Don't keep previous result
   

   ' Want to simulate fault on line 'Nevada 132kV - Reusent 132 kV'
   BusName1 = "NEVADA"
   BusName2 = "REUSENS"
   BusKV1   = 132
   BusKV2   = 132

   ' First find handles end-buses
   If FindBusByName( BusName1, BusKV1, BusHnd1& ) = 0 Then GoTo HasError
   If FindBusByName( BusName2, BusKV2, BusHnd2& ) = 0 Then GoTo HasError

   'Initialize outage list size
   OutageSize& = 0

   ' First add branches at Nevada to the outage list
   BrHnd& = 0
   While GetBusEquipment( BusHnd1, TC_BRANCH, BrHnd ) > 0
      ' Get line info
      If GetData( BrHnd, BR_nType, BrType& ) = 0 Then GoTo HasError
      ' Outage Lines only
      If BrType = TC_LINE Then 
        If GetData( BrHnd, BR_nBus1Hnd, LBus1Hnd ) = 0 Then GoTo HasError
        If GetData( BrHnd, BR_nBus2Hnd, LBus2Hnd ) = 0 Then GoTo HasError
        ' Add to the outage list all lines NOT going to Reusen
        If (LBus1Hnd<>BusHnd2 And LBus2Hnd<>BusHnd2)  Then 
          OutageSize = OutageSize + 1
          OutageLst(OutageSize) = BrHnd
        End If
      End If
   Wend

   ' Next add branches at Reusens to the outage list
   BrHnd& = 0
   While GetBusEquipment( BusHnd2, TC_BRANCH, BrHnd ) > 0
      ' Get line info
      If GetData( BrHnd, BR_nType, BrType& ) = 0 Then GoTo HasError
      ' Outage Lines only
      If BrType = TC_LINE Then 
        If GetData( BrHnd, BR_nBus1Hnd, LBus1Hnd ) = 0 Then GoTo HasError
        If GetData( BrHnd, BR_nBus2Hnd, LBus2Hnd ) = 0 Then GoTo HasError
        ' Add to the outage list all lines NOT going to Reusen
        If (LBus1Hnd<>BusHnd1 And LBus2Hnd<>BusHnd1)  Then 
          OutageSize = OutageSize + 1
          OutageLst(OutageSize) = BrHnd
        End If
      End If
   Wend

   If OutageSize > 0 Then
     ' Must close the list
     OutageLst(OutageSize+1) = 0
     FltOpt(2) = 1   ' Do Bus fault with outage
   End If

   ' Everything is ready.
   ' Simulate faults at Nevada
   If DoFault( BusHnd1, FltConn, FltOpt, OutageOpt, OutageLst, _
                 Rflt, Xflt, ClearPrev ) = 0 _
           Then GoTo HasError
   ' Simulate fault at Reusens
   ClearPrev = 0  ' Keep last result
   If DoFault( BusHnd2, FltConn, FltOpt, OutageOpt, OutageLst, _
                 Rflt, Xflt, ClearPrev ) = 0 _
           Then GoTo HasError

   ' Record fault results
   FaultFlag = 1
   While PickFault( FaultFlag ) <> 0
     If GetSCCurrent( HND_SC, Imagnitude, Iangle, 4 ) = 0 Then GoTo HasError
     FltDescription$ = FaultDescription( )
     Print #1, FltDescription$
     Call OutCurrent( Imagnitude, Iangle )
     FaultFlag = SF_NEXT ' Pick next fault
   Wend

   Close
   Exit Sub
   HasError:
   Print "Error: ", ErrorString( )
   Stop
End Sub

Function OpenOutFile() As Long
   ' Open file for output

   ' Dialog data generated by Dialog Edito
Begin Dialog Dialog_1 40,59, 202, 56, "Output File"
  Text 24,12,56,12, "Enter file name: "
  TextBox 84,12,84,12, .EditBox_1
  OKButton 44,36,52,12
  CancelButton 108,36,48,12
End Dialog

   Dim dlg As Dialog_1
   Dlg.EditBox_1 = "c:\0tmp\b0.rep"         ' Default name
   ' Dialog returns -1 for OK, 0 for Cancel, button # for PushButtons
   button = Dialog( Dlg )
   If button = 0 Then 
      OpenOutFile = 0
      Exit Function
   End If
   fileName = Dlg.EditBox_1
   Open fileName For Output As #1
   OpenOutFile = 1
End Function

Sub OutCurrent( Mag() As Double, Ang() As Double )
  Print #1,    "                               " ; _
      Format( Mag(1), "####0.0") & "@" & Format( Ang(1), "#0.0"), "     ", _
      Format( Mag(2), "####0.0") & "@" & Format( Ang(2), "#0.0"), "     ", _
      Format( Mag(3), "####0.0") & "@" & Format( Ang(3), "#0.0")
End Sub
' ASPEN PowerScript Sample Program
'
' CHECKMU.BAS
'
' Perform sanity check for zero sequence mutual coupling data
' Criteria: Zm < Zo where Zm is mutual coupling impedance
' and Zo is the smaller of two lines zero sequence impedance.
' The program takes From and To percent into consideration
' when calculating Zo
' 
' Version 1.0
' Category: OneLiner
'
Sub main()
   ' Variable declaration
'   Dim IntVal1&, IntVal2&, nVal3&
'   Dim BusHnd&, DeviceHnd&
   Dim DblVal1#
   Dim Array1(10) As Double
   Dim Array2(10) As Double
   Dim Array3(10) As Double
   Dim Array4(10) As Double
   Dim Array5(10) As Long
   Dim StringVal1$, StringVal2$
   Dim fileName$, errStr$, aLine$
   Dim nHnd1&

   ' Open output file
   If OpenOutput() = 0 Then GoTo hasError
'   GoTo branch:

   ' Print the header

   Print #1, "                                                      -- ASPEN Power Flow --"
   Print #1, "                                                    (Gererated by PowerScript)"
   Print #1, ""
   If GetData( HND_SYS, SY_dBaseMVA, DblVal1 ) = 0 Then GoTo HasError
   Print #1, "BASE MVA =  ", Format(DblVal1,"##0.0")
   If GetData( HND_SYS, SY_nNObus, IntVal1 ) = 0 Then GoTo HasError
   Print #1, "THIS FILE HAS:"; Space(7-Len(str$(IntVal1)));IntVal1; " BUSES"
   If GetData( HND_SYS, SY_nNOline, IntVal1 ) = 0 Then GoTo HasError
   Print #1, "              "; Space(7-Len(str$(IntVal1)));IntVal1; " LINES"
   If GetData( HND_SYS, SY_nNOxfmr, IntVal1 ) = 0 Then GoTo HasError
   If GetData( HND_SYS, SY_nNOmutual, IntVal1 ) = 0 Then GoTo HasError
   Print #1, "              "; Space(7-Len(str$(IntVal1)));IntVal1; " MUTUAL COUPLING GROUPS"
   Print #1, ""
   Print #1, "FILE COMMENTS:"
   If GetData( HND_SYS, SY_sFComment, StringVal1 ) = 0 Then GoTo HasError
   Print #1, "  "; StringVal1
   ' Write bus data
   Print #1, ""
   Print #1, "FOLLOWING MUTUAL COUPLING PAIRS HAVE QUESTIONABLE IMPEDANCE"

   Print #1, ""
   nBrHnd& = 0
   While GetEquipment( TC_LINE, nBrHnd& ) > 0
     If GetData( nBrHnd&, LN_sID,   LnID1$ ) = 0 Then GoTo HasError
     If GetData( nBrHnd&, LN_sName, LnName1$ ) = 0 Then GoTo HasError
     If GetData( nBrHnd&, LN_nBus1Hnd, nBus11& ) = 0 Then GoTo HasError
     If GetData( nBrHnd&, LN_nBus2Hnd, nBus12& ) = 0 Then GoTo HasError
     Ln1$ = FullBusName( nBus11 )& " -"; FullBusName( nBus12 ) & " " & LnID1 & " L " & LnName1
     If GetData( nBrHnd&, LN_dR0,  DblVal1# ) = 0 Then GoTo HasError
     If GetData( nBrHnd&, LN_dX0,  DblVal2# ) = 0 Then GoTo HasError
'               Print #1, "      "; frmt( DblVal1, "0.0000000R\0", 9 ) ; _
'                         "  "; frmt( DblVal2#, "0.0000000X\0", 9 )  ; _
'                         "  "; frmt( DblVal3#, "0.0000000G1\0", 9 ) ; _
'                         "  "; frmt( DblVal4#, "0.0000000B1\0", 9 ) ; _
'                         "  "; frmt( DblVal5#, "0.0000000G2\0", 9 ) ; _ 
'                         "  "; frmt( DblVal6#, "0.0000000B2\0", 9 ) 
               ' Print Mutual Coupling info
     nMuHnd& = 0
     While GetData( nBrHnd&, LN_nMuPairHnd, nMuHnd& ) > 0 
       If GetData( nMuHnd&, MU_dR, dRm# ) = 0 Then GoTo HasError
       If GetData( nMuHnd&, MU_dX, dXm# ) = 0 Then GoTo HasError
       If ( dRm*dRm+dXm*dXm > 0.0001 ) Then
         If GetData( nMuHnd&, MU_nHndLine1,  nHndLine1& ) = 0 Then GoTo HasError
         If nHndLine1& = nBrHnd& Then	' Get the other line
           If GetData( nMuHnd&, MU_dFrom2, dFrom2# ) = 0 Then GoTo HasError
           If GetData( nMuHnd&, MU_dTo2,   dTo2# ) = 0 Then GoTo HasError
           If GetData( nMuHnd&, MU_dFrom1, dFrom1# ) = 0 Then GoTo HasError
           If GetData( nMuHnd&, MU_dTo1,   dTo1# ) = 0 Then GoTo HasError
         Else
           If GetData( nMuHnd&, MU_nHndLine2,  nHndLine1& ) = 0 Then GoTo HasError
           If GetData( nMuHnd&, MU_dFrom1, dFrom2# ) = 0 Then GoTo HasError
           If GetData( nMuHnd&, MU_dTo1,   dTo2# ) = 0 Then GoTo HasError
           If GetData( nMuHnd&, MU_dFrom2, dFrom1# ) = 0 Then GoTo HasError
           If GetData( nMuHnd&, MU_dTo2,   dTo1# ) = 0 Then GoTo HasError
         End If
         If GetData( nHndLine1&, LN_sID,   LnID2$ ) = 0 Then GoTo HasError
         If GetData( nHndLine1&, LN_sName, LnName2$ ) = 0 Then GoTo HasError
         If GetData( nHndLine1&, LN_nBus1Hnd, nBus21& ) = 0 Then GoTo HasError
         If GetData( nHndLine1&, LN_nBus2Hnd,   nBus22& ) = 0 Then GoTo HasError
         Ln2$ = FullBusName( nBus21 )& " -"; FullBusName( nBus22 ) & " " & LnID2 & " L " & LnName2
       End If
     Wend
     Print #1, ""
   Wend
   Print "Report written successfully"
   Close
   Stop
   HasError:
   Print "Error: ", ErrorString( )
   Close 
   Stop
End Sub

' ===================== Dialog box spec (generated by Dialog Editor) ==========
'
   Begin Dialog Dialog_1 49,60, 202, 56, "Output File"
      Text 24,12,56,12, "Enter file name: "
      TextBox 84,12,84,12, .EditBox_1
      OKButton 44,36,52,12
      CancelButton 108,36,48,12
   End Dialog
'
' ===================== InputDialog() =========================================
' Purpose:
'   Get Fault spec. inputs from user
Function OpenOutput() As Long
   Dim dlg As Dialog_1
   Dlg.EditBox_1 = "c:\0tmp\a2.rep"         ' Default name
   ' Dialog returns -1 for OK, 0 for Cancel, button # for PushButtons
   button = Dialog( Dlg )
   If button = 0 Then 
     OpenOutput = 0
     Exit Function
   End If
   fileName = Dlg.EditBox_1
   Open fileName For Output As #1
   OpenOutput = 1
End Function
'
' ===================== frmt() ================================================
' Purpose:
'   Return right aligned numval which is formated according to Fmt$
Function frmt( numVal As Variant, Fmt$, wd& ) As String
  slen& = Len( Format(numVal,Fmt$) )
  If slen& < wd& Then nsp& = wd& - slen& Else nsp& = 1
  frmt = Space( nsp& ) & Format(numVal,Fmt$)
End Function 

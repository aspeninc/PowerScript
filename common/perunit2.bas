' ASPEN PowerScript sample program
'
' PERUNIT2.BAS
'
' Per-Unit Converter
' 
' PowerScript functions called:
'   GetEquipment()
'   GetData()
'
' ===================== Dialog box spec (generated by Dialog Editor) ==========
'
Begin Dialog PUDLG 17,16, 157, 77, "PU Converter "
  TextBox 116,12,28,12, .BaseMVA2
  TextBox 116,28,28,12, .BaseKV2
  TextBox 76,44,28,12, .PU1
  PushButton 92,60,40,12, "Convert", .Convert1
  Text 40,44,32,12, "Z (p.u.) ="
  Text 8,12,64,12, "Base MVA (3PH) ="
  TextBox 76,12,28,12, .BaseMVA1
  Text 20,28,52,12, "Base kV (L-L) ="
  TextBox 76,28,28,12, .BasekV1
  TextBox 116,44,28,12, .PU2
  PushButton 28,60,40,12, "Done ", .Done
  Text 84,0,20,12, "Old"
  Text 124,0,20,12, "New"
End Dialog
'
' ===================== main() ================================================
'
Sub main()
  Dim dlg As PUDLG
  ' Get system MVA
  If GetData( HND_SYS, SY_dBaseMVA, BaseMVA2 ) = 0 Then GoTo HasError
  BaseMVA2 = 100
  BaseMVA1 = BaseMVA2
  ' Figure out kV base from picked object
  If 0 <> GetEquipment( TC_PICKED, PickedHnd ) Then
    ' Probe to see what's being picked
    Select Case EquipmentType( PickedHnd )
      Case TC_LINE
        If 0=GetData( PickedHnd, LN_nBus1Hnd, BusHnd ) Then GoTo HasError
        If 0=GetData( BusHnd, BUS_dKVNorminal, BaseKV ) Then GoTo HasError
      Case TC_BUS
        If 0=GetData( PickedHnd&, BUS_dKVNorminal, BaseKV ) Then GoTo HasError
      Case TC_XFMR
        If 0=GetData( PickedHnd, XR_nBus1Hnd, BusHnd ) Then GoTo HasError
        If 0=GetData( PickedHnd, XR_dMVA, BaseMVA1 ) Then GoTo HasError
        BaseMVA1 = 100
        If 0=GetData( BusHnd, BUS_dKVNorminal, BaseKV ) Then GoTo HasError
    End Select
    dlg.BasekV1 = BaseKV
    dlg.BasekV2 = BaseKV
  End If
  ' Prepare dialog box
  dlg.BaseMVA1 = BaseMVA1
  dlg.BaseMVA2 = BaseMVA2
  ' Bring up the dialog
  Do
    button = Dialog( dlg )
    If button = 2 Then Exit Do ' Done
    BaseZ1 = dlg.BaseKV1 * dlg.BaseKV1 / dlg.BaseMVA1
    BaseZ2 = dlg.BaseKV2 * dlg.BaseKV2 / dlg.BaseMVA2
    dlg.PU2 = dlg.PU1 * BaseZ1 / BaseZ2
  Loop 
Exit Sub
  ' Error handling
  HasError:
  Print "Error: ", ErrorString( )
End Sub  ' End of Sub Main()